doctype html
html
  head
    meta(charset='utf8')
    title PBS Web
    link(href='/bower_components/bootstrap/dist/css/bootstrap.min.css', rel='stylesheet')
    link(href='/styles/main.css', rel='stylesheet')
    link(href='/styles/submit.css', rel='stylesheet')
    link(href='/bower_components/bootstrap-tabs-x/css/bootstrap-tabs-x.min.css', rel='stylesheet')
    link(href='/bower_components/bootstrap-fileinput/css/fileinput.min.css',rel='stylesheet')
    link(href='/bower_components/font-awesome/css/font-awesome.min.css',rel='stylesheet')
    link(href='/bower_components/iCheck/skins/square/blue.css',rel='stylesheet')
    link(href='https://cdn.bootcss.com/prettify/r298/prettify.min.css',rel='stylesheet')

    style.                 

  body
    nav(style='display: block;text-align: center;')
      a(href='/') Home
      a#a-active(href='/submit') Submit
      a(href='/about') About
      a(href='/contact') Contact
    .container-fluid.container-gray
      .container
        .row.form-group#step-panel
          .col-sm-8.col-sm-offset-2
            ul.nav.nav-pills.nav-justified.thumbnail.setup-panel
              li.active
                a(href='#step-1')
                  h4.list-group-item-heading Step 1
                  p.list-group-item-text Create script and upload files
              li.disabled
                a(href='#step-2')
                  h4.list-group-item-heading Step 2
                  p.list-group-item-text Get progress and results 
        #step-1
          .row
            // Tabs Above
            .tabs-x.tabs-above.tab-bordered.tabs-krajee
              ul#myTab-tabs-above.nav.nav-tabs(role='tablist')
                li.active
                  a(href='#home-tabs-above', role='tab', data-toggle='tab') 
                    i.fa.fa-edit.fa-lg.tab-box-icon
                    |  &nbsp; Use form to create script
                li.disabled
                  a(href='#profile-tabs-above', role='tab-kv', data-toggle='tab') 
                    i.fa.fa-upload.fa-lg.tab-box-icon
                    |  &nbsp; Upload script or files
              #myTabContent-tabs-above.tab-content
                #home-tabs-above.tab-pane.fade.in.active
                  form#form_compose
                    fieldset
                      legend General Options
                      // Tabella General Options
                      // Script name
                      .input-prepend.input-append
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Script Name', data-content="In this field you can insert a name for your script. Remember that if there is already a script with the same name in your home folder, it'll be overwritten.<br /> Interface automatically adds .pbs extension", data-html='true', data-container='body') Script Name
                          input.input-block-level.input-xlarge(id='scriptname', type='text', name='scriptname', placeholder='Insert script name', form='form-submit-script')
                          span.add-on .pbs
                      br
                      // Job name
                      .input-prepend
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Job name | -N', data-content='<p>Declares a name for the job.  The name specified may be  up  to<br/> and  including  15  characters  in  length.  It must consist of printable, non white space characters with the first  character alphabetic.<br/></p><p> If  the  -N option  is not specified, the job name will be the base name of the job script file specified on the command line.</p>', data-html='true', data-container='body') Job name
                          a#jobname_ee(data-toggle='popover', data-title='NOTE', data-content='Use only a-z, 0-9, - and _', data-trigger='manual', data-container='body' data-placement="top")
                            input.input-block-level.input-xlarge(id='jobname', type='text', name='jobname', placeholder='Insert job name', onkeypress='compose();', onchange='compose();')
                          span.add-on-without-border(style='color:red') *required
                      br
                      // Export shell variable
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Export env variables  | -V', data-content="Declares that all environment variables in the  qsub  command's environment are to be exported to the batch job.", data-html='true', data-container='body') Export Env Variables
                          input#exportEnv(style='display:none', type='text', name='exportEnv', value='#PBS -V')
                          .btn-group
                            button.btn-radio#exportEnvYes.btn.btn-choice.span2.active(type='button', onclick="document.getElementById('exportEnv').setAttribute('value', '#PBS -V'); compose();") Yes
                            button.btn-radio#exportEnvNo.btn.btn-choice.span2(type='button', onclick="document.getElementById('exportEnv').setAttribute('value', ''); compose();") No
                      br
                      // High Fault tollerance
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='High fault tollerance | -f', data-content='Specifies that the job is fault  tolerant.  The  fault_tolerant attribute will be set to true, which indicates that the job can survive the loss of a mom other than the <em>mother superior</em> mom\
                          (the first node in the exec hosts)', data-html='true', data-container='body') HFault Tollerance
                          input#HFaultToll(style='display:none', type='text', name='HFaultToll', value='')
                          .btn-group
                            button.btn-radio#HFaultTollYes.btn.btn-choice.span2(type='button', onclick="document.getElementById('HFaultToll').setAttribute('value', '#PBS -f');compose();") Yes
                            button.btn-radio#HFaultTollNo.btn.btn-choice.span2.active(type='button', onclick="document.getElementById('HFaultToll').setAttribute('value', ''); compose();") No
                      br
                      // Rerunable Job
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Rerunable Job | -r y|n', data-content='Declares whether the job is rerunable.', data-html='true', data-container='body') Rerunable Job
                          input#RerunJob(style='display:none', type='text', name='RerunJob', value='')
                          .btn-group
                            button.btn-radio#RerunJobYes.btn.btn-choice.span2(type='button', onclick="document.getElementById('RerunJob').setAttribute('value', ''); compose();") Yes
                            button.btn-radio#RerunJob.btn.btn-choice.span2(type='button', onclick="document.getElementById('RerunJob').setAttribute('value', '#PBS -r n'); compose();") No
                      br
                    fieldset
                      legend Resource Handling
                      .input-prepend.input-append
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Resource list | -l', data-content='<p>Defines the resources that are required by the job  and  establishes  a limit to the amount of resource that can be consumed.</p><p>If not set for a generally  available  resource,  such  as  CPU time,  the limit is infinite.</p>', data-html='true', data-container='body') Resource list
                          input.input-block-level.input-medium(id='ResList_Nodes appendPrependInput', type='number', maxlegth='3', name='ResList_Nodes', placeholder='Nodes', min='0', max='999', onkeypress='compose();', onchange='compose();')
                          span.add-on :
                          input.input-block-level.input-medium(id='ResList_Cores appendPrependInput', type='number', maxlength='1', name='ResList_Cores', placeholder='Cores per node', min='0', max='4', onkeypress='compose();', onchange='compose();')
                      br
                      // Require Gpus
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title="Require GPUs | -W '-x=GRES:gpu'", data-content='Specifies that the job requires nodes with nVidia/CUDA gpus. This attribute can be used only with MAUI scheduler, and you should remember that each gpus requires at least one cores on every node.', data-html='true', data-container='body') Require GPUs
                          input#RequireGPUS(style='display:none', type='checkbox', name='RequireGPUS')
                          .btn-group
                            button.btn-radio.btn-choice#RequireGPUSyes.btn.span2(type='button', onclick="if (document.getElementById('RequireGPUS').checked === false) {document.getElementById('RequireGPUS').checked = true; } compose();") Yes
                            button.btn-radio.btn-choice#RequireGPUSno.btn.span2.active(type='button', onclick="if (document.getElementById('RequireGPUS').checked) {document.getElementById('RequireGPUS').checked = false; } compose();") No
                      br
                      // Batch selection
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Queue Selection | -q', data-content='<p>Defines  the  destination  of the job.  The destination names a queue, a server, or a queue at a server.</p><p> The qsub command will submit the script to the  server  defined by  the  destination argument.  If the destination is a routing queue, the job may be routed by the server to  a  new  destina        tion.</p><p>If the -q option is not specified, the qsub command will submit the script to the default server.</p><p>If the -q option is specified, it is in one  of  the  following three forms: <pre>queue<br/>@server<br/>queue@server</pre></p>If  the  destination argument names a queue and does not name a  server, the job will be submitted to the  named  queue  at  the default server.', data-html='true', data-container='body') Queue selection
                          span#queue_select
                      br
                      // Priority
                      .input-prepend
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Priority | -p', data-content='Defines the priority of the job.  The priority argument must be a integer between -1024 and +1023 inclusive.  The default is no priority which is equivalent to a priority of zero.', data-html='true', data-container='body') Priority
                          input#prependInput.input-block-level.input-xlarge(type='number', name='priority', placeholder='Insert value -1023 .. +1023', min='-1023', max='1023', onchange='compose();', onkeypress='compose();')
                      br
                      // Walltime
                      .input-prepend.input-append
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Walltime | -l', data-content='Defines the total amount of time, measured in days, hours, minutes, and seconds (denoted in the form dd+hh:mm:ss) that the computer has to spend on a specific job.', data-html='true', data-container='body') Walltime
                          input#appendPrependInput.input-block-level.input-small(type='number', name='ResList_HH', placeholder='HH', min='0', max='23', onchange='compose();', onkeypress='compose();')
                          span.add-on :
                          input#appendPrependInput.input-block-level.input-small(type='number', name='ResList_MM', placeholder='MM', min='0', max='59')
                          span.add-on :
                          input#appendPrependInput.input-block-level.input-small(type='number', name='ResList_SS', placeholder='SS', min='0', max='59', onchange='compose();', onkeypress='compose();')
                      br
                      // Submission Time
                      .input-prepend.input-append
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Submission time | -a', data-content='Declares the time after which the job is  eligible  for  execution.', data-html='true', data-container='body') Submission Time
                          input#appendPrependInput.input-block-level.input-small(type='number', name='submission_HH', placeholder='HH', min='0', max='23', onchange='compose();', onkeypress='compose();')
                          span.add-on :
                          input#appendPrependInput.input-block-level.input-small(type='number', name='submission_MM', placeholder='MM', min='0', max='59', onchange='compose();', onkeypress='compose();')
                      br
                    fieldset
                      legend Output stream options
                      // Defines output path
                      .input-prepend
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Output Path | -j', data-content="Defines  the  path  to be used for the standard error & error stream of the batch job.  The path argument is of the form:\
                          <pre>[hostname:][path_name]</pre>\
                          where hostname is the name of a host to which the file will  be returned  and  path_name  is  the path name on that host in the syntax recognized by POSIX.  The argument will  be  interpreted as follows:\
                          <ul>\
                          <li><strong>path_name</strong>\
                          Where  path_name  is not an absolute path name, then the qsub command will expand the path name relative  to  the current  working  directory of the command.  The command will supply the name of the host upon which it  is  executing for the hostname component.\
                          </li><li><strong>hostname:path_name</strong>\
                          Where  path_name  is not an absolute path name, then the qsub command will not expand the path name  relative  to the current working directory of the command.  On delivery of  the  standard  error,  the  path  name  will  be expanded  relative  to  the user's home directory on the hostname system.\
                          </li><li><strong>path_name</strong>\
                          Where path_name specifies an absolute  path  name,  then the qsub will supply the name of the host on which it is executing for the hostname\
                          </li><li><strong>hostname:path_name</strong>\
                          Where path_name specifies an  absolute  path  name,  the path will be used as specified.\
                          </li><li><strong>hostname:</strong>\
                          Where  hostname  specifies the name of the host that the file should be returned to. The path will be the default\
                          file name.\
                          </li></ul>\
                          If the -e option is not specified or the path_name is not specified or is specified and is a directory, the default file name for  the  standard error stream will be used.  The default name has the following form:\
                          <pre>job_name.esequence_number</pre>\
                          where job_name is the name of  the  job,  see  -N  option,  and sequence_number is the job number assigned when the job is submitted.\
                          ", data-html='true', data-container='body') Output/Error Path
                          input#prependInput.input-block-level.input-xlarge(type='text', name='output_path', placeholder='See popup for syntax...')
                      br
                      // Stream requested
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Stream requested | -k', data-content='Defines  which (if either) of standard output or standard error will be retained on the execution host.  If set for  a  stream, this  option  overrides  the path name for that stream.  If not set, neither stream is retained on the execution host.', data-html='true', data-container='body') Stream requested
                          input#RequireOutput(style='display:none;', type='checkbox', name='RequireOutput', checked='true')
                          input#RequireError(style='display:none;', type='checkbox', name='RequireError', checked='true')
                          .btn-group
                            button.btn-checkbox.btn-choice#RequireOutput-btn.btn.span2.active(type='button', onclick="\
                            if (document.getElementById('RequireOutput').checked) {\
														  document.getElementById('RequireOutput').checked = false; }\
													  else {\
														  document.getElementById('RequireOutput').checked = true; } compose();") Output
                            button.btn-checkbox.btn-choice#RequireError-btn.btn.span2.active(type='button', onclick="\
                            if (document.getElementById('RequireError').checked) {\
														  document.getElementById('RequireError').checked = false; }\
													  else {\
														  document.getElementById('RequireError').checked = true; } compose();") Error
                      br
                      // Merge stream
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Merge stream | -j', data-content='Declares if the standard error (output) stream of the job will be merged\
                          with the standard output (error) stream of the job, or if they will be kept separated.', data-html='true', data-container='body') Merge stream
                          input#MergeOutput(style='display:none', type='text', name='MergeOutput', value='')
                          .btn-group
                            button.btn-radio.btn-choice#MergeOutputSEP.btn.span2.active(type='button', onclick="document.getElementById('MergeOutput').setAttribute('value', '');") Separated
                            button.btn-radio.btn-choice#MergeOutputEO.btn.span2(type='button', onclick="\
                            document.getElementById('MergeOutput').setAttribute('value', '#PBS -j eo');\
                            compose();") Output in Error
                            button.btn-radio.btn-choice#MergeOutputOE.btn.span2(type='button', onclick="\
                            document.getElementById('MergeOutput').setAttribute('value', '#PBS -j oe');\
                            compose();") Error in Output
                      br
                    fieldset
                      legend Mail options
                      // Mail Events
                      div
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Mail on event | -m', data-content='Defines the set of conditions under which the execution server will send a mail message about the job.', data-html='true', data-container='body') Send mail when job:
                          // Elemento nascosto
                          input#MailBegin(style='display:none;', type='checkbox', name='MailBegin', checked='true')
                          input#MailEnd(style='display:none;', type='checkbox', name='MailEnd', checked='true')
                          input#MailAbort(style='display:none;', type='checkbox', name='MailAbort', checked='true')
                          // Elementi visibili
                          .btn-group
                            button.btn-checkbox.btn-choice#Mail-btn.btn.span2.active(type='button', onclick="\
                            if (document.getElementById('MailBegin').checked) {\
                            document.getElementById('MailBegin').checked = false; }\
                            else {\
                            document.getElementById('MailBegin').checked = true; }\
                            compose();") Begins
                            button.btn-checkbox.btn-choice#Mail-btn.btn.span2.active(type='button', onclick="\
                            if (document.getElementById('MailEnd').checked) {\
                            document.getElementById('MailEnd').checked = false; }\
                            else {\
                            document.getElementById('MailEnd').checked = true; }\
                            compose();") Ends
                            button.btn-checkbox.btn-choice#Mail-btn.btn.span2.active(type='button', onclick="\
                            if (document.getElementById('MailAbort').checked) {\
                            document.getElementById('MailAbort').checked = false; }\
                            else {\
                            document.getElementById('MailAbort').checked = true; }\
                            compose();") Aborts
                      br
                      // Mail Adresses
                      .input-prepend
                        .btn-group
                          a.btn.span2.btn-info.btn-head(href='#', data-toggle='popover', title='Mail address | -M', data-content='<p>Declares the list of users to whom mail is sent by  the  execu-\
                          tion server when it sends mail about the job.</p><p>The user_list argument is of the form:<pre>user[@host][,user[@host],...]</pre>If  unset, the list defaults to the submitting user at the qsub host, i.e. the job owner.</p>', data-html='true', data-container='body') Mail Address
                          input#prependInput.input-block-level.input-xlarge(type='text', name='mail_addr', placeholder='Insert mail addresses, comma separated', onchange='compose();', onkeypress='compose();')
                      br
                    fieldset
                      legend Script body
                        legend
                          div
                            textarea#bash_body.input-block-level(rows='5', placeholder='Insert bash script body here...', name='bash_body', onkeypress='compose();', onchange='compose();')

                    fieldset
                      legend Result
                        legend
                          pre#results_code.input-bloc-level.
                          a#results-btn.btn.btn-primary(style='display:none;', onclick='compose()') Compose
                          br
                  
                  #alert_info.alert.alert-danger.alert-dismissible(role='alert',style="display:none")
                    button.close(type='button', data-dismiss='alert', aria-label='Close')
                      span(aria-hidden='true') ×
                    strong#war_caption Warning!
                  input#result_script(type='text', name='result_script', style='display:none;')
                  p(align='right')
                    button#btn_submit_script.btn.btn-info.btn-lg.ladda-button(data-style="expand-right")
                      span.ladda-label Save PBS script
                  
                    


                #profile-tabs-above.tab-pane.fade
                  //div.col-xs-12.col-sm-6.upload-list
                  legend  Upload script or files
                  div
                    .row
                      .col-md-12.col-xs-12
                        input#inputData(name='file_data', type='file', multiple='', data-browse-on-zone-click="true")
                  br
                  legend Type your command line
                  .input-prepend.input-append
                    span.add-on(style='padding:7px 6px') ~$ qsub 
                    input#job_script_name.input-block-level.input-half(align='center', type='text', name='relative_path', placeholder='Insert script relative to your home path')

                  br
                  #alert_info2.alert.alert-danger.alert-dismissible(role='alert',style="display:none")
                    button.close(type='button', data-dismiss='alert', aria-label='Close')
                      span(aria-hidden='true') ×
                    strong#war_caption2 Warning!
                  #alert_info3.alert.alert-info.alert-dismissible(role='alert',style="display:none")
                    button.close(type='button', data-dismiss='alert', aria-label='Close')
                      span(aria-hidden='true') !
                    strong#war_caption3 Notice: If you haven't fill in script name, we will assign it uniquely and randomly.
                  div(align="right")
                    button#btn_launch.btn.btn-info.btn-lg.ladda-button(data-style="expand-right")
                      span.ladda-label Launch
                

      
    
  script(src='/bower_components/jquery/dist/jquery.js')
  script(src='/bower_components/bootstrap/dist/js/bootstrap.js')
  script(src='/bower_components/bootstrap-tabs-x/js/bootstrap-tabs-x.min.js')
  script(src='/bower_components/bootstrap-fileinput/js/fileinput.min.js')
  script(src='/bower_components/iCheck/icheck.js')
  script(src='https://cdn.bootcss.com/prettify/r298/prettify.js')
  script(src='https://cdn.bootcss.com/ladda-bootstrap/0.9.4/spin.min.js')
  script(src='https://cdn.bootcss.com/ladda-bootstrap/0.9.4/ladda.min.js')

  script(src='/scripts/submit.js')
